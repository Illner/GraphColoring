//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GraphColoring.Tests {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class TestResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TestResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GraphColoring.Tests.TestResource", typeof(TestResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to valid
        ///Graph created.
        ///Name of graph: Name
        ///Count of vertices: 6
        ///Real count of vertices: 6
        ///Count of edges: 5
        ///Vertices: 
        ///-- Identifier: 788, userName: 788
        ///-- Identifier: 789, userName: 789
        ///-- Identifier: 790, userName: 790
        ///-- Identifier: 791, userName: 791
        ///-- Identifier: 792, userName: 792
        ///-- Identifier: 793, userName: 793
        ///Edges: 
        ///-- Vertex: 788 (788)
        ///---- 789 (789) 
        ///---- 790 (790) 
        ///---- 791 (791) 
        ///-- Vertex: 789 (789)
        ///---- 788 (788) 
        ///-- Vertex: 790 (790)
        ///---- 788 (788) 
        ///-- Vertex: 791 (79 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ColoredGraphStandard {
            get {
                return ResourceManager.GetString("ColoredGraphStandard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to graphClass1
        ///Graph created.
        ///Name of graph: Name
        ///Count of vertices: 6
        ///Real count of vertices: 6
        ///Count of edges: 9
        ///Vertices: 
        ///-- Identifier: 409, userName: 409
        ///-- Identifier: 410, userName: 410
        ///-- Identifier: 411, userName: 411
        ///-- Identifier: 412, userName: 412
        ///-- Identifier: 413, userName: 413
        ///-- Identifier: 414, userName: 414
        ///Edges: 
        ///-- Vertex: 409 (409)
        ///---- 410 (410) 
        ///---- 412 (412) 
        ///---- 414 (414) 
        ///-- Vertex: 410 (410)
        ///---- 409 (409) 
        ///---- 411 (411) 
        ///---- 413 (413) 
        ///-- Vertex: 411 (4 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GraphClassStandard {
            get {
                return ResourceManager.GetString("GraphClassStandard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to graphComplement1
        ///Graph created.
        ///Name of graph: Name
        ///Count of vertices: 4
        ///Real count of vertices: 4
        ///Count of edges: 6
        ///Vertices: 
        ///-- Identifier: 616, userName: 616
        ///-- Identifier: 617, userName: 617
        ///-- Identifier: 618, userName: 618
        ///-- Identifier: 619, userName: 619
        ///Edges: 
        ///-- Vertex: 616 (616)
        ///---- 617 (617) 
        ///---- 618 (618) 
        ///---- 619 (619) 
        ///-- Vertex: 617 (617)
        ///---- 616 (616) 
        ///---- 618 (618) 
        ///---- 619 (619) 
        ///-- Vertex: 618 (618)
        ///---- 616 (616) 
        ///---- 617 (617) 
        ///---- 619 (619) 
        ///-- Vertex [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GraphComplementStandard {
            get {
                return ResourceManager.GetString("GraphComplementStandard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to graphComponent1
        ///Graph created.
        ///Name of graph: Name
        ///Count of vertices: 13
        ///Real count of vertices: 13
        ///Count of edges: 11
        ///Vertices: 
        ///-- Identifier: 273, userName: 273
        ///-- Identifier: 274, userName: 274
        ///-- Identifier: 275, userName: 275
        ///-- Identifier: 276, userName: 276
        ///-- Identifier: 277, userName: 277
        ///-- Identifier: 278, userName: 278
        ///-- Identifier: 279, userName: 279
        ///-- Identifier: 280, userName: 280
        ///-- Identifier: 281, userName: 281
        ///-- Identifier: 282, userName: 282
        ///-- Identifier: 283, userN [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GraphComponentStandard {
            get {
                return ResourceManager.GetString("GraphComponentStandard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to graphCopy1
        ///Graph created.
        ///Name of graph: Name
        ///Count of vertices: 4
        ///Real count of vertices: 4
        ///Count of edges: 6
        ///Vertices: 
        ///-- Identifier: 650, userName: 650
        ///-- Identifier: 651, userName: 651
        ///-- Identifier: 652, userName: 652
        ///-- Identifier: 653, userName: 653
        ///Edges: 
        ///-- Vertex: 650 (650)
        ///---- 651 (651) 
        ///---- 652 (652) 
        ///---- 653 (653) 
        ///-- Vertex: 651 (651)
        ///---- 650 (650) 
        ///---- 652 (652) 
        ///---- 653 (653) 
        ///-- Vertex: 652 (652)
        ///---- 650 (650) 
        ///---- 651 (651) 
        ///---- 653 (653) 
        ///-- Vertex: 653  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GraphCopyStandard {
            get {
                return ResourceManager.GetString("GraphCopyStandard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to graphCycle1
        ///Graph created.
        ///Name of graph: Name
        ///Count of vertices: 5
        ///Real count of vertices: 5
        ///Count of edges: 4
        ///Vertices: 
        ///-- Identifier: 382, userName: 382
        ///-- Identifier: 383, userName: 383
        ///-- Identifier: 384, userName: 384
        ///-- Identifier: 385, userName: 385
        ///-- Identifier: 386, userName: 386
        ///Edges: 
        ///-- Vertex: 382 (382)
        ///---- 383 (383) 
        ///---- 384 (384) 
        ///-- Vertex: 383 (383)
        ///---- 382 (382) 
        ///---- 385 (385) 
        ///-- Vertex: 384 (384)
        ///---- 382 (382) 
        ///---- 386 (386) 
        ///-- Vertex: 385 (385)
        ///---- 383 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GraphCycleStandard {
            get {
                return ResourceManager.GetString("GraphCycleStandard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to graphDegreeSequence1
        ///Graph created.
        ///Name of graph: Name
        ///Count of vertices: 9
        ///Real count of vertices: 9
        ///Count of edges: 9
        ///Vertices: 
        ///-- Identifier: 355, userName: 355
        ///-- Identifier: 356, userName: 356
        ///-- Identifier: 357, userName: 357
        ///-- Identifier: 358, userName: 358
        ///-- Identifier: 359, userName: 359
        ///-- Identifier: 360, userName: 360
        ///-- Identifier: 361, userName: 361
        ///-- Identifier: 362, userName: 362
        ///-- Identifier: 363, userName: 363
        ///Edges: 
        ///-- Vertex: 355 (355)
        ///---- 356 (356) 
        ///---- 357 ( [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GraphDegreeSequenceStandard {
            get {
                return ResourceManager.GetString("GraphDegreeSequenceStandard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to graphLineGraph1
        ///Graph created.
        ///Name of graph: Name
        ///Count of vertices: 5
        ///Real count of vertices: 5
        ///Count of edges: 6
        ///Vertices: 
        ///-- Identifier: 730, userName: 730
        ///-- Identifier: 731, userName: 731
        ///-- Identifier: 732, userName: 732
        ///-- Identifier: 733, userName: 733
        ///-- Identifier: 734, userName: 734
        ///Edges: 
        ///-- Vertex: 730 (730)
        ///---- 731 (731) 
        ///---- 732 (732) 
        ///---- 733 (733) 
        ///-- Vertex: 731 (731)
        ///---- 730 (730) 
        ///---- 734 (734) 
        ///-- Vertex: 732 (732)
        ///---- 730 (730) 
        ///---- 733 (733) 
        ///-- Vertex [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GraphLineGraphStandard {
            get {
                return ResourceManager.GetString("GraphLineGraphStandard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to valid
        ///Graph created.
        ///Name of graph: Name
        ///Count of vertices: 9
        ///Real count of vertices: 9
        ///Count of edges: 13
        ///Vertices: 
        ///-- Identifier: 568, userName: 568
        ///-- Identifier: 569, userName: 569
        ///-- Identifier: 570, userName: 570
        ///-- Identifier: 571, userName: 571
        ///-- Identifier: 572, userName: 572
        ///-- Identifier: 573, userName: 573
        ///-- Identifier: 574, userName: 574
        ///-- Identifier: 575, userName: 575
        ///-- Identifier: 576, userName: 576
        ///Edges: 
        ///-- Vertex: 568 (568)
        ///---- 569 (569) 
        ///---- 571 (571) 
        ///-- Vert [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GraphModificationStandard {
            get {
                return ResourceManager.GetString("GraphModificationStandard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to graphSpanningTree1
        ///Graph created.
        ///Name of graph: Name
        ///Count of vertices: 4
        ///Real count of vertices: 4
        ///Count of edges: 4
        ///Vertices: 
        ///-- Identifier: 530, userName: 530
        ///-- Identifier: 531, userName: 531
        ///-- Identifier: 532, userName: 532
        ///-- Identifier: 533, userName: 533
        ///Edges: 
        ///-- Vertex: 530 (530)
        ///---- 531 (531) 
        ///---- 532 (532) 
        ///-- Vertex: 531 (531)
        ///---- 530 (530) 
        ///---- 533 (533) 
        ///-- Vertex: 532 (532)
        ///---- 530 (530) 
        ///---- 533 (533) 
        ///-- Vertex: 533 (533)
        ///---- 531 (531) 
        ///---- 532 (532) 
        ///
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GraphSpanningTreeStandard {
            get {
                return ResourceManager.GetString("GraphSpanningTreeStandard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to graphSubGraph1
        ///Graph created.
        ///Name of graph: Name
        ///Count of vertices: 6
        ///Real count of vertices: 6
        ///Count of edges: 5
        ///Vertices: 
        ///-- Identifier: 684, userName: 684
        ///-- Identifier: 685, userName: 685
        ///-- Identifier: 686, userName: 686
        ///-- Identifier: 687, userName: 687
        ///-- Identifier: 688, userName: 688
        ///-- Identifier: 689, userName: 689
        ///Edges: 
        ///-- Vertex: 684 (684)
        ///---- 687 (687) 
        ///---- 688 (688) 
        ///---- 689 (689) 
        ///-- Vertex: 685 (685)
        ///---- 687 (687) 
        ///-- Vertex: 686 (686)
        ///---- 687 (687) 
        ///-- Vertex [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GraphSubGraphStandard {
            get {
                return ResourceManager.GetString("GraphSubGraphStandard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to adjacencyList
        ///valid
        ///Reading file: TestFile.temp
        ///Graph created.
        ///Name of graph: Graph name
        ///Count of vertices: 10
        ///Real count of vertices: 10
        ///Count of edges: 10
        ///Vertices: 
        ///-- Identifier: 1, userName: 0
        ///-- Identifier: 2, userName: 5
        ///-- Identifier: 3, userName: 7
        ///-- Identifier: 4, userName: 1
        ///-- Identifier: 5, userName: 6
        ///-- Identifier: 6, userName: 8
        ///-- Identifier: 7, userName: 2
        ///-- Identifier: 8, userName: 3
        ///-- Identifier: 9, userName: 4
        ///-- Identifier: 10, userName: 9
        ///Edges: 
        ///-- Vertex: 0 (1 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReaderStandard {
            get {
                return ResourceManager.GetString("ReaderStandard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to write
        ///OK
        ///recordExists
        ///OK
        ///first
        ///OK
        ///
        ///.
        /// </summary>
        internal static string WriterStandard {
            get {
                return ResourceManager.GetString("WriterStandard", resourceCulture);
            }
        }
    }
}
